ejemplo1.c:24:19: warning: missing terminating " character
   24 | const char* s1 = R"foo(
      |                   ^
ejemplo1.c:24:19: error: missing terminating " character
   24 | const char* s1 = R"foo(
      |                   ^~~~~
ejemplo1.c:24:18: error: ‘R’ undeclared here (not in a function)
   24 | const char* s1 = R"foo(
      |                  ^
ejemplo1.c:25:1: error: expected ‘,’ or ‘;’ before ‘Hello’
   25 | Hello
      | ^~~~~
ejemplo1.c:27:5: warning: missing terminating " character
   27 | )foo";
      |     ^
ejemplo1.c:27:5: error: missing terminating " character
   27 | )foo";
      |     ^~
ejemplo1.c: In function ‘gets_example_func’:
ejemplo1.c:34:16: warning: ‘return’ with a value, in function returning void
   34 |         return 1;
      |                ^
ejemplo1.c:30:6: note: declared here
   30 | void gets_example_func(void) {
      |      ^~~~~~~~~~~~~~~~~
ejemplo1.c: In function ‘get_y_or_n’:
ejemplo1.c:53:9: warning: ‘gets’ is deprecated [-Wdeprecated-declarations]
   53 |         gets(response);
      |         ^~~~
In file included from ejemplo1.c:15:
/usr/include/stdio.h:605:14: note: declared here
  605 | extern char *gets (char *__s) __wur __attribute_deprecated__;
      |              ^~~~
ejemplo1.c: In function ‘main’:
ejemplo1.c:73:4: error: C++ style comments are not allowed in ISO C90
   73 |    // char analitic1[size_array1]="аналитик";
      |    ^
ejemplo1.c:73:4: note: (this will be reported only once per input file)
ejemplo1.c:96:11: error: ‘s2’ undeclared (first use in this function); did you mean ‘s1’?
   96 |     puts (s2);
      |           ^~
      |           s1
ejemplo1.c:96:11: note: each undeclared identifier is reported only once for each function it appears in
