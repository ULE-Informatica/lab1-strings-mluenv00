=================================================================
==20343==ERROR: AddressSanitizer: heap-use-after-free on address 0x60b0000000f0 at pc 0x564c22160b73 bp 0x7ffe458854b0 sp 0x7ffe45884c58
WRITE of size 19 at 0x60b0000000f0 thread T0
    #0 0x564c22160b72 in __interceptor_memcpy (/home/lab/Escritorio/DPS/lab1-strings-mluenv00/pruebas_ejemplo2/ejemplo2_asan+0x1db72)
    #1 0x564c22220d70 in optionThree /home/lab/Escritorio/DPS/lab1-strings-mluenv00/pruebas_ejemplo2/ejemplo2.c:23
    #2 0x564c222210d8 in main /home/lab/Escritorio/DPS/lab1-strings-mluenv00/pruebas_ejemplo2/ejemplo2.c:67
    #3 0x7f707e759d8f in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58
    #4 0x7f707e759e3f in __libc_start_main_impl ../csu/libc-start.c:392
    #5 0x564c2214b3c4 in _start (/home/lab/Escritorio/DPS/lab1-strings-mluenv00/pruebas_ejemplo2/ejemplo2_asan+0x83c4)

0x60b0000000f0 is located 0 bytes inside of 100-byte region [0x60b0000000f0,0x60b000000154)
freed by thread T0 here:
    #0 0x564c221dada7 in free (/home/lab/Escritorio/DPS/lab1-strings-mluenv00/pruebas_ejemplo2/ejemplo2_asan+0x97da7)
    #1 0x564c22220d55 in optionThree /home/lab/Escritorio/DPS/lab1-strings-mluenv00/pruebas_ejemplo2/ejemplo2.c:22
    #2 0x564c222210d8 in main /home/lab/Escritorio/DPS/lab1-strings-mluenv00/pruebas_ejemplo2/ejemplo2.c:67
    #3 0x7f707e759d8f in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58

previously allocated by thread T0 here:
    #0 0x564c221db0f7 in malloc (/home/lab/Escritorio/DPS/lab1-strings-mluenv00/pruebas_ejemplo2/ejemplo2_asan+0x980f7)
    #1 0x564c22220d45 in optionThree /home/lab/Escritorio/DPS/lab1-strings-mluenv00/pruebas_ejemplo2/ejemplo2.c:21
    #2 0x564c222210d8 in main /home/lab/Escritorio/DPS/lab1-strings-mluenv00/pruebas_ejemplo2/ejemplo2.c:67
    #3 0x7f707e759d8f in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58

SUMMARY: AddressSanitizer: heap-use-after-free (/home/lab/Escritorio/DPS/lab1-strings-mluenv00/pruebas_ejemplo2/ejemplo2_asan+0x1db72) in __interceptor_memcpy
Shadow bytes around the buggy address:
  0x0c167fff7fc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c167fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c167fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c167fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c167fff8000: fa fa fa fa fa fa fa fa fd fd fd fd fd fd fd fd
=>0x0c167fff8010: fd fd fd fd fd fa fa fa fa fa fa fa fa fa[fd]fd
  0x0c167fff8020: fd fd fd fd fd fd fd fd fd fd fd fa fa fa fa fa
  0x0c167fff8030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c167fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c167fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c167fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==20343==ABORTING
